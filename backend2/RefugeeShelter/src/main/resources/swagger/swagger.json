{
  "openapi": "3.0.0",
  "info": {
    "title": "refugee-shelter-api",
    "description": "The API for the Refugee Shelter project",
    "contact": {
      "email": "akrikoff@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/AKRIKOFF/RefugeeShelter/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/api/v1/rooms": {
      "get": {
        "tags": [
          "Room"
        ],
        "description": "Returns all rooms",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All rooms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Room"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Current room owner",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1_rooms_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Save room",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rooms/{roomId}": {
      "get": {
        "tags": [
          "Room"
        ],
        "description": "Return room by id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Room"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rooms_roomId_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated room",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Room"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Removed room",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Room"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rooms_roomId_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated room",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rooms/user/{ownerId}": {
      "get": {
        "tags": [
          "Room"
        ],
        "description": "Return all user's rooms",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "description": "Owner ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rooms by owner ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_1"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/reservations": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "description": "Returns all reservations",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/reservations/{reservationId}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "description": "Return reservation by id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "Reservation ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "Reservation ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservations_reservationId_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Reservation by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "Reservation ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Reservation by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/reservations/users/{userId}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "description": "Return reservation by owner id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Owner ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation by owner ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/reservations/users/{userId}/rooms/{roomId}": {
      "post": {
        "tags": [
          "Reservation"
        ],
        "description": "Create reservation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rooms_roomId_body_2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reservation by owner ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Returns all users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_5"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Save user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1_users_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Saved user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_5"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/users/{userId}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_userId_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_6"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_6"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/token/refresh/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Refresh token",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Refresh token",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/roles/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Save role",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1_roles_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Saved role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/users/save/roles/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Add role to user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization Bearer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/save_roles_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Added role to user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_201_1"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_403"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Room": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "price": {
            "type": "integer"
          },
          "hasKitchen": {
            "type": "boolean"
          },
          "hasBathroom": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "room": {
            "$ref": "#/components/schemas/Room"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "address": {
            "type": "string",
            "example": "Georgia, Tbilisi, Ivanova St, 8, 12"
          },
          "latitude": {
            "type": "number",
            "example": 32
          },
          "longitude": {
            "type": "number",
            "example": 123
          },
          "price": {
            "type": "integer",
            "example": 5300
          },
          "hasKitchen": {
            "type": "boolean",
            "example": true
          },
          "hasBathroom": {
            "type": "boolean",
            "example": false
          },
          "description": {
            "type": "string",
            "example": "This is really good flat for refugee from Ukraine And Russia"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "inline_response_403": {
        "type": "object",
        "properties": {
          "error_message": {
            "type": "string",
            "example": "The user is not logged in"
          }
        }
      },
      "v1_rooms_body": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "Georgia, Tbilisi, Ivanova St, 8, 12"
          },
          "latitude": {
            "type": "number",
            "example": 32
          },
          "longitude": {
            "type": "number",
            "example": 123
          },
          "price": {
            "type": "integer",
            "example": 5300
          },
          "hasKitchen": {
            "type": "boolean",
            "example": true
          },
          "hasBathroom": {
            "type": "boolean",
            "example": false
          },
          "description": {
            "type": "string",
            "example": "This is really good flat for refugee from Ukraine And Russia"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "address": {
            "type": "string",
            "example": "Georgia, Tbilisi, Ivanova St, 8, 12"
          },
          "latitude": {
            "type": "number",
            "example": 32
          },
          "longitude": {
            "type": "number",
            "example": 123
          },
          "price": {
            "type": "integer",
            "example": 5300
          },
          "hasKitchen": {
            "type": "boolean",
            "example": true
          },
          "hasBathroom": {
            "type": "boolean",
            "example": false
          },
          "description": {
            "type": "string",
            "example": "This is really good flat for refugee from Ukraine And Russia"
          }
        }
      },
      "rooms_roomId_body": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "Georgia, Tbilisi, Ivanova St, 8, 12"
          },
          "latitude": {
            "type": "number",
            "example": 32
          },
          "longitude": {
            "type": "number",
            "example": 123
          },
          "price": {
            "type": "integer",
            "example": 5300
          },
          "hasKitchen": {
            "type": "boolean",
            "example": true
          },
          "hasBathroom": {
            "type": "boolean",
            "example": false
          },
          "description": {
            "type": "string",
            "example": "This is really good flat for refugee from Ukraine And Russia"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "address": {
            "type": "string",
            "example": "Georgia, Tbilisi, Ivanova St, 8, 12"
          },
          "latitude": {
            "type": "number",
            "example": 32
          },
          "longitude": {
            "type": "number",
            "example": 123
          },
          "price": {
            "type": "integer",
            "example": 1000
          },
          "hasKitchen": {
            "type": "boolean",
            "example": true
          },
          "hasBathroom": {
            "type": "boolean",
            "example": false
          },
          "description": {
            "type": "string",
            "example": "This is really good flat for refugee from Ukraine And Russia"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "rooms_roomId_body_1": {
        "type": "object",
        "properties": {
          "price": {
            "type": "integer",
            "example": 1000
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 64
          },
          "startDate": {
            "type": "string",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "example": "2022-01-01"
          },
          "room": {
            "$ref": "#/components/schemas/Room"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "reservations_reservationId_body": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "example": "2022-03-01"
          },
          "endDate": {
            "type": "string",
            "example": "2022-04-01"
          }
        }
      },
      "inline_response_200_4": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 64
          },
          "startDate": {
            "type": "string",
            "example": "2022-03-01"
          },
          "endDate": {
            "type": "string",
            "example": "2022-04-01"
          },
          "room": {
            "$ref": "#/components/schemas/Room"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "rooms_roomId_body_2": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "example": "2022-01-01"
          }
        }
      },
      "apiv1users_roles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "ROLE_USER"
          }
        }
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "Anton Krikov"
          },
          "username": {
            "type": "string",
            "example": "antonidas"
          },
          "email": {
            "type": "string",
            "example": "antonidas@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "#23vjjsKLSjfLdskjfdsls"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiv1users_roles"
            }
          }
        }
      },
      "v1_users_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Anton Krikov"
          },
          "username": {
            "type": "string",
            "example": "antonidas"
          },
          "email": {
            "type": "string",
            "example": "antonidas@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "vero1slb34!"
          }
        }
      },
      "users_userId_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Ivan Krikov"
          },
          "username": {
            "type": "string",
            "example": "antonidas"
          },
          "email": {
            "type": "string",
            "example": "antonidas@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "vero1slb34!"
          }
        }
      },
      "inline_response_200_6": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "Ivan Krikov"
          },
          "username": {
            "type": "string",
            "example": "antonidas"
          },
          "email": {
            "type": "string",
            "example": "antonidas@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "#23vjjsKLSjfLdskjfdsls"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiv1users_roles"
            }
          }
        }
      },
      "inline_response_200_7": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJha3JpayIsInJvbGVzIjpbIlJPTEVfVVNFUiJdLCJpc3MiOiIvYXBpL3Rva2VuL3JlZnJlc2giLCJleHAiOjE2NjQ4Nzg0MjJ9.aBaLTKBqBUQKgBEll1M8LEQFCmRccmXYxSlDNcpTkkE"
          },
          "refresh_token": {
            "type": "string",
            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJha3JpayIsImlzcyI6Ii9hcGkvbG9naW4iLCJleHAiOjE2NjQ4Nzk2MTV9.kmvm5nRpmjhyix6at3JkmdDeFGt4bwrlcMsed0mameA"
          }
        }
      },
      "v1_roles_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ROLE_MANAGER"
          }
        }
      },
      "inline_response_201": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "name": {
            "type": "string",
            "example": "ROLE_MANAGER"
          }
        }
      },
      "save_roles_body": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "example": "antonidas"
          },
          "roleName": {
            "type": "string",
            "example": "ROLE_ADMIN"
          }
        }
      },
      "inline_response_201_1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "Anton Krikov"
          },
          "username": {
            "type": "string",
            "example": "antonidas"
          },
          "email": {
            "type": "string",
            "example": "antonidas@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "#23vjjsKLSjfLdskjfdsls"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_201_1_roles"
            }
          }
        }
      },
      "inline_response_201_1_roles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "ROLE_ADMIN"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
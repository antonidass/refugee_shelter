version: "3.9"

services:
  backend_1:
    depends_on:
      - ref_shel_db
    container_name: backend_1
    image: springboot-app
    ports:
      - "8081:8081"
    build:
      context: ../backend/RefugeeShelter
      dockerfile: Dockerfile
    volumes:
      - "../backend/RefugeeShelter/src/main/resources:/resources"

    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ref_shel_db:5432/ref_shel
      - SPRING_DATASOURCE_USERNAME=akrik
      - SPRING_DATASOURCE_PASSWORD=akrik
      - SERVER_PORT=8081

  backend_2:
    depends_on:
      - ref_shel_db
    container_name: backend_2
    image: springboot-app
    ports:
      - "8082:8082"
    build:
      context: ../backend/RefugeeShelter
      dockerfile: Dockerfile

    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ref_shel_db:5432/ref_shel
      - SPRING_DATASOURCE_USERNAME=akrik
      - SPRING_DATASOURCE_PASSWORD=akrik
      - SERVER_PORT=8082

  backend_3:
    depends_on:
      - ref_shel_db
    container_name: backend_3
    image: springboot-app
    ports:
      - "8083:8083"
    build:
      context: ../backend/RefugeeShelter
      dockerfile: Dockerfile

    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ref_shel_db:5432/ref_shel
      - SPRING_DATASOURCE_USERNAME=akrik
      - SPRING_DATASOURCE_PASSWORD=akrik
      - SERVER_PORT=8083

  # backend_4:
  #   depends_on:
  #     - ref_shel_db
  #   container_name: backend_4
  #   image: springboot-app
  #   ports:
  #     - "8084:8084"
  #   build:
  #     context: ../backend/RefugeeShelter
  #     dockerfile: Dockerfile

  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://ref_shel_db:5432/ref_shel
  #     - SPRING_DATASOURCE_USERNAME=akrik
  #     - SPRING_DATASOURCE_PASSWORD=akrik
  #     - SERVER_PORT=8084

  backend_5:
    depends_on:
      - ref_shel_db
    container_name: backend_5
    image: springboot-app
    ports:
      - "8085:8085"
    build:
      context: ../backend/RefugeeShelter
      dockerfile: Dockerfile

    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ref_shel_db:5432/ref_shel
      - SPRING_DATASOURCE_USERNAME=akrik
      - SPRING_DATASOURCE_PASSWORD=akrik
      - SERVER_PORT=8085

  ref_shel_db:
    image: "postgres:latest"
    restart: always
    environment:
      POSTGRES_DB: "ref_shel"
      POSTGRES_USER: "akrik"
      POSTGRES_PASSWORD: "akrik"
    ports:
      - "5432:5432"
    volumes:
      - ref_shel_db:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8089:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - ~/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      # пробрасываем папку static в папку hmtl в контейнере
      - ../static:/usr/share/nginx/html
      # пробрасываем конфиг
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      # пробрасываем логи
      - ../nginx/logs:/var/log/nginx
    ports:
      # на маке 8080 в контейнере 80 порт
      - "8080:80"
    links:
      - backend_1
      # - backend_4
      - backend_5
      # - backend_2
      # - backend_3

volumes:
  ref_shel_db:
    driver: local
# up all
# docker compose up -d && cd /Users/akrik/Desktop/refugee_shelter/backend/RefugeeShelter &&  mvn clean package && cd /Users/akrik/Desktop/refugee_shelter/docker && docker-compose up -d --build --pull springboot-app

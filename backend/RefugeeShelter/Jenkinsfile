def skipRemainingStages = false

pipeline {
    agent any

    stages {
        stage('Git') {
            steps {
                script {
                    git branch: 'main', credentialsId: '94c0674c-e4ae-4504-9047-c826491b79fe', url: 'git@github.com:antonidass/refugee_shelter.git'
                }
            }
        }
        stage("Build") {
            steps {
                script {
                    dir("backend/RefugeeShelter") {
                        sh "./mvnw clean compile"
                    }
                }
            }
        }
        stage("Unit Tests") {
           try {
               steps {
                   dir("backend/RefugeeShelter") {
                      sh "./mvnw test -Dtest='com.example.refugeeshelter.repositories.**'"
                      sh "./mvnw test -Dtest='com.example.refugeeshelter.service.**'"
                   }
               }
           }
           catch (err) {
               script {
                     allure([
                       includeProperties: false,
                       jdk: '',
                       properties: [],
                       reportBuildPolicy: 'ALWAYS',
                       results: [[path: 'target/allure-results']]
                     ])
               }
               throw err
           }
        }
        stage("Integration Tests") {
              steps {
                  dir("backend/RefugeeShelter") {
                     sh "./mvnw test -Dtest=IntegrationUsersTests,IntegrationRoomsTests,IntegrationReservationTests"
                  }
              }
        }
        stage("E2E Tests") {
             steps {
                 dir("backend/RefugeeShelter") {
                    sh "./mvnw test -Dtest=E2E"
                 }
             }

             post {
                always {
                    dir("backend/RefugeeShelter") {
                        script {
                          allure([
                            includeProperties: false,
                            jdk: '',
                            properties: [],
                            reportBuildPolicy: 'ALWAYS',
                            results: [[path: 'target/allure-results']]
                          ])
                        }
                    }
                }
             }
        }
    }
}
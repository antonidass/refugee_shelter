def skipRemainingStages = false

pipeline {
    agent any

    stages {
        stage('Git') {
            steps {
                script {
                    try {
                        git branch: 'main', credentialsId: '94c0674c-e4ae-4504-9047-c826491b79fe', url: 'git@github.com:antonidass/refugee_shelter.git'
                    }
                    catch (Exception exc) {
                        skipRemainingStages = true
                        currentBuild.result = "FAILED"
                        throw exc
                    }
                }
            }
        }
        stage("Build") {
            when {
                expression {
                    !skipRemainingStages
                }
            }
            steps {
                script {
                    try {
                        dir("backend/RefugeeShelter") {
                            sh "./mvnw clean compile"
                        }
                    }
                    catch (Exception exc) {
                        skipRemainingStages = true
                        currentBuild.result = "FAILED"
                        throw exc
                    }
                }
            }
        }
        stage("Unit Tests") {
               steps {
                   dir("backend/RefugeeShelter") {
                      sh "./mvnw test -Dtest=test.java.com.example.refugeeshelter.repositories.**,test.java.com.example.refugeeshelter.service.**"
                   }
               }

               post {
                   always {
                       dir("backend/RefugeeShelter") {
                           script {
                             allure([
                               includeProperties: false,
                               jdk: '',
                               properties: [],
                               reportBuildPolicy: 'ALWAYS',
                               results: [[path: 'target/allure-results']]
                             ])
                           }
                       }
                   }
               }
        }
        stage("Integration Tests") {
                      steps {
                          dir("backend/RefugeeShelter") {
                             sh "./mvnw test -Dtest=IntegrationUsersTests,IntegrationRoomsTests,IntegrationReservationTests"
                          }
                      }

                      post {
                          always {
                              dir("backend/RefugeeShelter") {
                                  script {
                                    allure([
                                      includeProperties: false,
                                      jdk: '',
                                      properties: [],
                                      reportBuildPolicy: 'ALWAYS',
                                      results: [[path: 'target/allure-results']]
                                    ])
                                  }
                              }
                          }
                      }
       }
       stage("E2E Tests") {
                             steps {
                                 dir("backend/RefugeeShelter") {
                                    sh "./mvnw test -Dtest=E2E"
                                 }
                             }
                             post {
                                 always {
                                     dir("backend/RefugeeShelter") {
                                         script {
                                           allure([
                                             includeProperties: false,
                                             jdk: '',
                                             properties: [],
                                             reportBuildPolicy: 'ALWAYS',
                                             results: [[path: 'target/allure-results']]
                                           ])
                                         }
                                     }
                                 }
                             }
                         }
       }
    }
}